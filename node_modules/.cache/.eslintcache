[{"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\index.js":"1","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\dashboard.js":"2","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\home\\home.js":"4","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\noticias.js":"5","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\cabecalho.js":"6","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\menu.js":"7","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\noticia.model.js":"8","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\balancetes.js":"9","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\tabela-noticias.js":"10","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\editar-noticia.js":"11","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\secao.model.js":"12","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\documento.model.js":"13","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\ordenacao.js":"14","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\itens-tabela-noticias.js":"15","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\paginacao.js":"16","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\remover-noticia.js":"17","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-upload.js":"18","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-server.js":"19","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\cadastrar-noticia.js":"20","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\itens-balancetes.js":"21","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\editar-documento.js":"22","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\cadastrar-documento.js":"23","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\cadastrar-secao.js":"24","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\editar-secao.js":"25","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\alterar-status-noticia.js":"26","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-documento.js":"27","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-secao.js":"28","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-documento.js":"29","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-secao.js":"30","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\usuarios.js":"31","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\editar-usuario.js":"32","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\cadastrar-usuario.js":"33","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\tabela-usuarios.js":"34","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\usuario.model.js":"35","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\itens-tabela-usuarios.js":"36","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\ordenacao.js":"37","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\paginacao.js":"38","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\remover-usuario.js":"39","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\login\\login.js":"40"},{"size":600,"mtime":1657553579372,"results":"41","hashOfConfig":"42"},{"size":1220,"mtime":1660765846407,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1657551110891,"results":"44","hashOfConfig":"42"},{"size":716,"mtime":1658230092759,"results":"45","hashOfConfig":"42"},{"size":6297,"mtime":1660758957787,"results":"46","hashOfConfig":"42"},{"size":1263,"mtime":1658233900742,"results":"47","hashOfConfig":"42"},{"size":1273,"mtime":1660762580854,"results":"48","hashOfConfig":"42"},{"size":264,"mtime":1660232675051,"results":"49","hashOfConfig":"42"},{"size":7120,"mtime":1661428214914,"results":"50","hashOfConfig":"42"},{"size":8262,"mtime":1659710718633,"results":"51","hashOfConfig":"42"},{"size":12997,"mtime":1660758888744,"results":"52","hashOfConfig":"42"},{"size":345,"mtime":1660318616230,"results":"53","hashOfConfig":"42"},{"size":273,"mtime":1660318590177,"results":"54","hashOfConfig":"42"},{"size":1168,"mtime":1659616976705,"results":"55","hashOfConfig":"42"},{"size":2431,"mtime":1660758923105,"results":"56","hashOfConfig":"42"},{"size":2370,"mtime":1659458610184,"results":"57","hashOfConfig":"42"},{"size":4748,"mtime":1660758937892,"results":"58","hashOfConfig":"42"},{"size":1485,"mtime":1659018942590,"results":"59","hashOfConfig":"42"},{"size":1416,"mtime":1660758897042,"results":"60","hashOfConfig":"42"},{"size":11981,"mtime":1660758868599,"results":"61","hashOfConfig":"42"},{"size":12783,"mtime":1661429117734,"results":"62","hashOfConfig":"42"},{"size":10316,"mtime":1660758691022,"results":"63","hashOfConfig":"42"},{"size":8805,"mtime":1660758665667,"results":"64","hashOfConfig":"42"},{"size":7860,"mtime":1660758704140,"results":"65","hashOfConfig":"42"},{"size":8218,"mtime":1660758713926,"results":"66","hashOfConfig":"42"},{"size":5371,"mtime":1660758915719,"results":"67","hashOfConfig":"42"},{"size":1785,"mtime":1660930357498,"results":"68","hashOfConfig":"42"},{"size":1722,"mtime":1660930292794,"results":"69","hashOfConfig":"42"},{"size":1802,"mtime":1660930390231,"results":"70","hashOfConfig":"42"},{"size":1742,"mtime":1660930369353,"results":"71","hashOfConfig":"42"},{"size":6125,"mtime":1660759031404,"results":"72","hashOfConfig":"42"},{"size":8121,"mtime":1660758983109,"results":"73","hashOfConfig":"42"},{"size":7490,"mtime":1660758974857,"results":"74","hashOfConfig":"42"},{"size":7993,"mtime":1660562619636,"results":"75","hashOfConfig":"42"},{"size":179,"mtime":1660325885133,"results":"76","hashOfConfig":"42"},{"size":1770,"mtime":1660564021502,"results":"77","hashOfConfig":"42"},{"size":1168,"mtime":1659616976705,"results":"78","hashOfConfig":"42"},{"size":2370,"mtime":1659458610184,"results":"79","hashOfConfig":"42"},{"size":4746,"mtime":1660759012956,"results":"80","hashOfConfig":"42"},{"size":6144,"mtime":1660758854540,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"dd7txt",{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"85"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"171"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"171"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"171"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"85"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\index.js",[],[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\dashboard.js",[],[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\reportWebVitals.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\home\\home.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\noticias.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\cabecalho.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\menu.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\noticia.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\balancetes.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\tabela-noticias.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\editar-noticia.js",["215","216"],[],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport Noticia from '../../../models/noticia.model';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport GaleriaImagensServer from './galeria-imagens-server';\r\nimport GaleriaImagensUpload from './galeria-imagens-upload';\r\n\r\nfunction EditarNoticia(props) {\r\n\r\n    const URL_IMG = 'http://www.institutoitaquere.org.br/restful/img/';\r\n    const URL_CADASTRAR_NOTICIA = 'http://www.institutoitaquere.org.br/restful/noticias';\r\n    const API_URL_LISTAR_GALERIA = 'http://www.institutoitaquere.org.br/restful/galeria/';\r\n\r\n    const [capa, setCapa] = useState('');\r\n    const [galeriaServer, setGaleriaServer] = useState([]);\r\n    const [galeriaUpload, setGaleriaUpload] = useState([]);\r\n    const [imagem, setImagem] = useState();\r\n    const [codigo, setCodigo] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [conteudo, setConteudo] = useState('');\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [exibirImagens, setExibirImagens] = useState(false);\r\n    const [qtdeGaleria, setQtdeGaleria] = useState(0);\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    const capaElement = useRef();\r\n    const galeriaElement = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterNoticia(){\r\n            \r\n            setGaleriaUpload([]);\r\n            setImagem();\r\n            let { data } = await axios.get(API_URL_LISTAR_GALERIA + props.noticia.codigo);\r\n            setGaleriaServer(data.data);\r\n            setCodigo(props.noticia.codigo);\r\n            setTitulo(props.noticia.titulo);\r\n            setConteudo(props.noticia.conteudo);\r\n            setCapa(URL_IMG + props.noticia.capa);\r\n            setExibirImagens(true);\r\n            setQtdeGaleria(data.data.length);\r\n            capaElement.current.required = false;\r\n\r\n            capaElement.current.value = \"\";\r\n            galeriaElement.current.value = \"\";\r\n        }\r\n\r\n        if(props.carregarNoticia){\r\n            obterNoticia();\r\n            props.setCarregarNoticia(false);\r\n        }\r\n    }, [props.carregarNoticia]);\r\n\r\n    async function salvarNoticia(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novaNoticia = new Noticia(conteudo, titulo);\r\n            const formData = new FormData();\r\n            formData.append('image', imagem);\r\n            formData.append('data', JSON.stringify(novaNoticia));\r\n            galeriaUpload.map((img, index) => {\r\n                var cod = index + 1;\r\n                formData.append('gallery' + cod, img);\r\n            });\r\n            formData.append('galleryserver', JSON.stringify(galeriaServer));\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(URL_CADASTRAR_NOTICIA + '/' + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivelCapa() {\r\n        return exibirImagens ? null : 'hidden';\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? 'mt-3' : 'hidden';\r\n    }\r\n\r\n    function handleImage(event){\r\n        setImagem(event.target.files[0]);\r\n        setExibirImagens(true);\r\n        setCapa(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    function handleGallery(event){\r\n        setGaleriaUpload(Array.from(event.target.files));\r\n    }\r\n\r\n    function handleTxtTitulo(event){\r\n        setTitulo(event.target.value);\r\n    }\r\n\r\n    function handleTxtConteudo(event){\r\n        setConteudo(event.target.value);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleGaleriaServer(codigo){\r\n        setGaleriaServer(galeriaServer.filter(img => img.codigo !== codigo));\r\n    }\r\n\r\n    function handleGaleriaUpload(imagem){\r\n        setGaleriaUpload(galeriaUpload.filter(img => img !== imagem));\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Notícia\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarNoticia}>\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Capa (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={5}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleImage}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={capaElement} />\r\n                                </Col>\r\n                                <Col \r\n                                    md={3}\r\n                                    className={visivelCapa()}>\r\n                                    <Image \r\n                                        src={capa}\r\n                                        thumbnail />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Título:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={titulo} \r\n                                        onChange={handleTxtTitulo}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        as=\"textarea\" \r\n                                        rows={10}\r\n                                        value={conteudo} \r\n                                        onChange={handleTxtConteudo} \r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Galeria (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\" multiple\r\n                                        onChange={handleGallery}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={galeriaElement} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row} >\r\n                                <GaleriaImagensServer \r\n                                    imagens={galeriaServer}\r\n                                    handleGaleriaServer={handleGaleriaServer}/>\r\n                                <GaleriaImagensUpload \r\n                                    imagens={galeriaUpload}\r\n                                    qtdeGaleria={qtdeGaleria}\r\n                                    handleGaleriaUpload={handleGaleriaUpload}/>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={props.handleExibirTabela} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nEditarNoticia.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    handleExibirTabela: PropTypes.func.isRequired,\r\n    setRecarregarNoticias: PropTypes.func.isRequired,\r\n    noticia: PropTypes.object.isRequired,\r\n    carregarNoticia: PropTypes.bool.isRequired,\r\n    setCarregarNoticia: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarNoticia;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\secao.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\documento.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\ordenacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\itens-tabela-noticias.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\paginacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\remover-noticia.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-upload.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-server.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\cadastrar-noticia.js",["217","218"],[],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport Noticia from '../../../models/noticia.model';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport GaleriaImagensUpload from './galeria-imagens-upload';\r\n\r\nfunction EditarNoticia(props) {\r\n\r\n    const URL_CADASTRAR_NOTICIA = 'http://www.institutoitaquere.org.br/restful/noticias';\r\n\r\n    const [capa, setCapa] = useState('');\r\n    const [galeriaUpload, setGaleriaUpload] = useState([]);\r\n    const [imagem, setImagem] = useState();\r\n    const [codigo, setCodigo] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [conteudo, setConteudo] = useState('');\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [exibirImagens, setExibirImagens] = useState(false);\r\n    const [qtdeGaleria, setQtdeGaleria] = useState(0);\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    const capaElement = useRef();\r\n    const galeriaElement = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        function obterNoticia(){\r\n            setGaleriaUpload([]);\r\n            setImagem();\r\n            setCodigo('');\r\n            setTitulo('');\r\n            setConteudo('');\r\n            setExibirImagens(false);\r\n            setQtdeGaleria(0);\r\n            capaElement.current.required = true;\r\n            capaElement.current.value = \"\";\r\n            galeriaElement.current.value = \"\";\r\n        }\r\n\r\n        if(props.carregarNoticia){\r\n            obterNoticia();\r\n            props.setCarregarNoticia(false);\r\n        }\r\n    }, [props.carregarNoticia]);\r\n\r\n    async function salvarNoticia(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novaNoticia = new Noticia(conteudo, titulo);\r\n            const formData = new FormData();\r\n            formData.append('image', imagem);\r\n            formData.append('data', JSON.stringify(novaNoticia));\r\n            galeriaUpload.map((img, index) => {\r\n                var cod = index + 1;\r\n                formData.append('gallery' + cod, img);\r\n            });\r\n            formData.append('method', 'post');\r\n            let { data } = await axios.post(URL_CADASTRAR_NOTICIA, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Criação de Novo Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivelCapa() {\r\n        return exibirImagens ? null : 'hidden';\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? 'mt-3' : 'hidden';\r\n    }\r\n\r\n    function handleImage(event){\r\n        setImagem(event.target.files[0]);\r\n        setExibirImagens(true);\r\n        setCapa(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    function handleGallery(event){\r\n        setGaleriaUpload(Array.from(event.target.files));\r\n    }\r\n\r\n    function handleTxtTitulo(event){\r\n        setTitulo(event.target.value);\r\n    }\r\n\r\n    function handleTxtConteudo(event){\r\n        setConteudo(event.target.value);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleGaleriaUpload(imagem){\r\n        setGaleriaUpload(galeriaUpload.filter(img => img !== imagem));\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Cadastrar Notícia\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarNoticia}>\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Capa (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={5}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleImage}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={capaElement} />\r\n                                </Col>\r\n                                <Col \r\n                                    md={3}\r\n                                    className={visivelCapa()}>\r\n                                    <Image \r\n                                        src={capa}\r\n                                        thumbnail />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Título:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={titulo} \r\n                                        onChange={handleTxtTitulo}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        as=\"textarea\" \r\n                                        rows={10}\r\n                                        value={conteudo} \r\n                                        onChange={handleTxtConteudo} \r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Galeria (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\" multiple\r\n                                        onChange={handleGallery}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={galeriaElement} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row} >\r\n                                <GaleriaImagensUpload \r\n                                    imagens={galeriaUpload}\r\n                                    qtdeGaleria={qtdeGaleria}\r\n                                    handleGaleriaUpload={handleGaleriaUpload}/>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={props.handleExibirTabela} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nEditarNoticia.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    handleExibirTabela: PropTypes.func.isRequired,\r\n    setRecarregarNoticias: PropTypes.func.isRequired,\r\n    carregarNoticia: PropTypes.bool.isRequired,\r\n    setCarregarNoticia: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarNoticia;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\itens-balancetes.js",["219","220"],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\editar-documento.js",["221","222","223","224"],[],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Documento from '../../../../models/documento.model';\r\n\r\nfunction EditarDocumento(props) {\r\n\r\n    const URL_DOC = 'http://www.institutoitaquere.org.br/restful/doc/';\r\n    const URL_CADASTRAR_DOCUMENTO = 'http://www.institutoitaquere.org.br/restful/documento/';\r\n\r\n    const [descricaoDocumento, setDescricaoDocumento] = useState('');\r\n    const [documento, setDocumento] = useState();\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [codigo, setCodigo] = useState('');\r\n    const [caminho, setCaminho] = useState('');\r\n    const [documentoServ, setDocumentoServ] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        function obterDocumento(){\r\n            setCodigo(props.documento.codigo);\r\n            setDescricaoDocumento(props.documento.descricao);\r\n            setCaminho(props.caminho);\r\n            setDocumentoServ(URL_DOC + props.documento.documento);\r\n        }\r\n\r\n        if(props.carregarDocumento){\r\n            obterDocumento();\r\n            props.setCarregarDocumento(false);\r\n        }\r\n    }, [props.carregarDocumento]);\r\n\r\n    async function salvarDocumento(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novoDocumento = new Documento(descricaoDocumento, '', '');\r\n            const formData = new FormData();\r\n            formData.append('document', documento);\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(URL_CADASTRAR_DOCUMENTO + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModal(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            if(props.codNoticia === 0){\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + err.message);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            }\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirItensBalancete(event){\r\n        event.preventDefault();\r\n        props.handleExibirItensBalancete();\r\n    }\r\n\r\n    function handleDescricaoDocumento(event){\r\n        setDescricaoDocumento(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleDocumento(event){\r\n        setDocumento(event.target.files[0]);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Documento \r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarDocumento} >\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Caminho:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {caminho}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={descricaoDocumento}\r\n                                        onChange={handleDescricaoDocumento}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Documento:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleDocumento}\r\n                                        accept=\"application/pdf\"\r\n                                        />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Documento Atual:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <a href={documentoServ} target=\"_blank\">\r\n                                        {descricaoDocumento}\r\n                                    </a>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={handleExibirItensBalancete} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModal} >\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro} >\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditarDocumento.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    documento: PropTypes.object.isRequired,\r\n    caminho: PropTypes.string.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n    handleExibirItensBalancete: PropTypes.func.isRequired,\r\n    carregarDocumento: PropTypes.bool.isRequired,\r\n    setCarregarDocumento: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarDocumento;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\cadastrar-documento.js",["225"],[],"import {\r\n    useState,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Documento from '../../../../models/documento.model';\r\n\r\nfunction CadastrarDocumento(props) {\r\n\r\n    const URL_CADASTRAR_DOCUMENTO = 'http://www.institutoitaquere.org.br/restful/documento';\r\n\r\n    const [descricaoDocumento, setDescricaoDocumento] = useState('');\r\n    const [documento, setDocumento] = useState();\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n\r\n    async function salvarDocumento(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novoDocumento = new Documento(descricaoDocumento, props.codParenteSecao, '');\r\n            const formData = new FormData();\r\n            formData.append('document', documento);\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'post');\r\n            let { data } = await axios.post(URL_CADASTRAR_DOCUMENTO, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModal(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            if(props.codNoticia === 0){\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + err.message);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            }\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirItensBalancete(event){\r\n        event.preventDefault();\r\n        props.handleExibirItensBalancete();\r\n    }\r\n\r\n    function handleDescricaoDocumento(event){\r\n        setDescricaoDocumento(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleDocumento(event){\r\n        setDocumento(event.target.files[0]);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Cadastrar Documento \r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarDocumento} >\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Caminho:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {props.caminho}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={descricaoDocumento} \r\n                                        onChange={handleDescricaoDocumento}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Documento:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleDocumento}\r\n                                        accept=\"application/pdf\"\r\n                                        required\r\n                                        />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={handleExibirItensBalancete} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModal} >\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro} >\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nCadastrarDocumento.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    codParenteSecao: PropTypes.string.isRequired,\r\n    caminho: PropTypes.string.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n    handleExibirItensBalancete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CadastrarDocumento;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\cadastrar-secao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\editar-secao.js",["226","227"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Secao from '../../../../models/secao.model';\r\n\r\nfunction EditarSecao(props) {\r\n\r\n    const URL_CADASTRAR_SECAO = 'http://www.institutoitaquere.org.br/restful/secao/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [codigo, setCodigo] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [caminho, setCaminho] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterSecao(){\r\n            setCodigo(props.secao.codigo);\r\n            setDescricao(props.secao.descricao);\r\n            setCaminho(props.secao.caminho);\r\n        }\r\n\r\n        if(props.carregarSecao){\r\n            obterSecao();\r\n            props.setCarregarSecao(false);\r\n        }\r\n    }, [props.carregarSecao]);\r\n\r\n    async function salvarSecao(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novaSecao = new Secao(props.secao.codparente, descricao, props.secao.nivel, '');\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novaSecao));\r\n            formData.append('method', 'put');\r\n            console.log(JSON.stringify(novaSecao));\r\n            console.log(URL_CADASTRAR_SECAO + props.secao.codigo);\r\n            let { data } = await axios.post(URL_CADASTRAR_SECAO + props.secao.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModal(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirItensBalancete(event){\r\n        event.preventDefault();\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleDescricaoSecao(event){\r\n        setDescricao(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Seção\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarSecao} >\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Caminho:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {caminho}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={descricao} \r\n                                        onChange={handleDescricaoSecao}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={handleExibirItensBalancete} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModal}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro} >\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditarSecao.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    secao: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n    handleExibirItensBalancete: PropTypes.func.isRequired,\r\n    carregarSecao: PropTypes.bool.isRequired,\r\n    setCarregarSecao: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarSecao;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\alterar-status-noticia.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-documento.js",["228","229"],[],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  \r\n    faSortUp\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Documento from '../../../models/documento.model';\r\n\r\nfunction UpDocumento(props) {\r\n\r\n    const API_URL_UPDATE_DOCUMENTO = 'http://www.institutoitaquere.org.br/restful/documento/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n    \r\n    async function handleUpDocumento(event){\r\n        event.preventDefault();\r\n        try {\r\n            const novoDocumento = new Documento('', props.documento.secao, props.documento.posicao);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'up');\r\n            let { data } = await axios.post(API_URL_UPDATE_DOCUMENTO + props.documento.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                props.setCarregarBalancetes(true);\r\n            } else {\r\n                setMessagem(\"Erro Up do Registro: \" + data.response);\r\n                console.log(messagem);\r\n            }\r\n        } catch(err) {\r\n            setMessagem(\"Erro Up do Registro: \" + err.message);\r\n            console.log(messagem);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FontAwesomeIcon\r\n            className={'btn btn-outline-dark btn-sm'}\r\n            onClick={handleUpDocumento}\r\n            icon={faSortUp} />\r\n    );\r\n}\r\n\r\nUpDocumento.propTypes = {\r\n    documento: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default UpDocumento;",[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-secao.js",["230","231"],[],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  \r\n    faSortUp\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Secao from '../../../models/secao.model';\r\n\r\nfunction UpSecao(props) {\r\n\r\n    const API_URL_UPDATE_SECAO = 'http://www.institutoitaquere.org.br/restful/secao/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    async function handleUpSecao(event){\r\n        event.preventDefault();\r\n        try {\r\n            const novoSecao = new Secao(props.secao.codparente, '', '', props.secao.posicao);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoSecao));\r\n            formData.append('method', 'up');\r\n            let { data } = await axios.post(API_URL_UPDATE_SECAO + props.secao.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                props.setCarregarBalancetes(true);\r\n            } else {\r\n                setMessagem(\"Erro Up do Registro: \" + data.response);\r\n                console.log(messagem);\r\n            }\r\n        } catch(err) {\r\n            setMessagem(\"Erro up do Registro: \" + err.message);\r\n            console.log(messagem);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FontAwesomeIcon\r\n            className={'btn btn-outline-dark btn-sm'}\r\n            onClick={handleUpSecao}\r\n            icon={faSortUp} />\r\n    );\r\n}\r\n\r\nUpSecao.propTypes = {\r\n    secao: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default UpSecao;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-documento.js",["232","233"],[],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  \r\n    faSortDown\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Documento from '../../../models/documento.model';\r\n\r\nfunction DownDocumento(props) {\r\n\r\n    const API_URL_UPDATE_DOCUMENTO = 'http://www.institutoitaquere.org.br/restful/documento/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    async function handleDownDocumento(event){\r\n        event.preventDefault();\r\n        try {\r\n            const novoDocumento = new Documento('', props.documento.secao, props.documento.posicao);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'down');\r\n            let { data } = await axios.post(API_URL_UPDATE_DOCUMENTO + props.documento.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                props.setCarregarBalancetes(true);\r\n            } else {\r\n                setMessagem(\"Erro Down do Registro: \" + data.response);\r\n                console.log(messagem);\r\n            }\r\n        } catch(err) {\r\n            setMessagem(\"Erro Down do Registro: \" + err.message);\r\n            console.log(messagem);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FontAwesomeIcon\r\n            className={'btn btn-outline-dark btn-sm'}\r\n            onClick={handleDownDocumento} \r\n            icon={faSortDown} />\r\n    );\r\n}\r\n\r\nDownDocumento.propTypes = {\r\n    documento: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DownDocumento;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-secao.js",["234","235"],[],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  \r\n    faSortDown\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Secao from '../../../models/secao.model';\r\n\r\nfunction DownSecao(props) {\r\n\r\n    const API_URL_UPDATE_SECAO = 'http://www.institutoitaquere.org.br/restful/secao/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    async function handleDownSecao(event){\r\n        event.preventDefault();\r\n        try {\r\n            const novoSecao = new Secao(props.secao.codparente, '', '', props.secao.posicao);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoSecao));\r\n            formData.append('method', 'down');\r\n            let { data } = await axios.post(API_URL_UPDATE_SECAO + props.secao.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                props.setCarregarBalancetes(true);\r\n            } else {\r\n                setMessagem(\"Erro Down do Registro: \" + data.response);\r\n                console.log(messagem);\r\n            }\r\n        } catch(err) {\r\n            setMessagem(\"Erro Down do Registro: \" + err.message);\r\n            console.log(messagem);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FontAwesomeIcon\r\n            className={'btn btn-outline-dark btn-sm'}\r\n            onClick={handleDownSecao}\r\n            icon={faSortDown} />\r\n    );\r\n}\r\n\r\nDownSecao.propTypes = {\r\n    secao: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DownSecao;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\usuarios.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\editar-usuario.js",["236","237"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport Usuario from '../../../models/usuario.model';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditarUsuario(props) {\r\n\r\n    const URL_CADASTRAR_USUARIO = 'http://www.institutoitaquere.org.br/restful/usuarios';\r\n\r\n    const [codigo, setCodigo] = useState('');\r\n    const [nome, setNome] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        function obterUsuario(){\r\n            setCodigo(props.usuario.codigo);\r\n            setNome(props.usuario.nome);\r\n            setSenha(props.usuario.senha);\r\n        }\r\n\r\n        if(props.carregarUsuario){\r\n            obterUsuario();\r\n            props.setCarregarUsuario(false);\r\n        }\r\n    }, [props.carregarUsuario]);\r\n\r\n\r\n    async function salvarUsuario(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novoUsuario = new Usuario(nome, senha);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoUsuario));\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(URL_CADASTRAR_USUARIO + '/' + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? 'mt-3' : 'hidden';\r\n    }\r\n\r\n    function handleNome(event){\r\n        setNome(event.target.value);\r\n    }\r\n\r\n    function handleSenha(event){\r\n        setSenha(event.target.value);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarUsuarios(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarUsuarios(true);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Usuario\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarUsuario}>\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Nome:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={nome} \r\n                                        onChange={handleNome}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Senha:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={senha} \r\n                                        onChange={handleSenha}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={props.handleExibirTabela} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nEditarUsuario.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    handleExibirTabela: PropTypes.func.isRequired,\r\n    setRecarregarUsuarios: PropTypes.func.isRequired,\r\n    usuario: PropTypes.object.isRequired,\r\n    carregarUsuario: PropTypes.bool.isRequired,\r\n    setCarregarUsuario: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarUsuario;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\cadastrar-usuario.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\tabela-usuarios.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\usuario.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\itens-tabela-usuarios.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\ordenacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\paginacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\remover-usuario.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\login\\login.js",[],[],{"ruleId":"238","severity":1,"message":"239","line":68,"column":8,"nodeType":"240","endLine":68,"endColumn":31,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":77,"column":44,"nodeType":"244","messageId":"245","endLine":77,"endColumn":46},{"ruleId":"238","severity":1,"message":"239","line":59,"column":8,"nodeType":"240","endLine":59,"endColumn":31,"suggestions":"246"},{"ruleId":"242","severity":1,"message":"243","line":68,"column":44,"nodeType":"244","messageId":"245","endLine":68,"endColumn":46},{"ruleId":"242","severity":1,"message":"243","line":142,"column":29,"nodeType":"244","messageId":"245","endLine":142,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":161,"column":40,"nodeType":"244","messageId":"245","endLine":161,"endColumn":42},{"ruleId":"247","severity":1,"message":"248","line":4,"column":5,"nodeType":"249","messageId":"250","endLine":4,"endColumn":11},{"ruleId":"247","severity":1,"message":"251","line":14,"column":5,"nodeType":"249","messageId":"250","endLine":14,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":47,"column":8,"nodeType":"240","endLine":47,"endColumn":33,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":188,"column":37,"nodeType":"255","messageId":"256","endLine":188,"endColumn":77,"fix":"257"},{"ruleId":"247","severity":1,"message":"251","line":12,"column":5,"nodeType":"249","messageId":"250","endLine":12,"endColumn":10},{"ruleId":"247","severity":1,"message":"251","line":13,"column":5,"nodeType":"249","messageId":"250","endLine":13,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":42,"column":8,"nodeType":"240","endLine":42,"endColumn":29,"suggestions":"258"},{"ruleId":"247","severity":1,"message":"259","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"260","line":9,"column":5,"nodeType":"249","messageId":"250","endLine":9,"endColumn":10},{"ruleId":"247","severity":1,"message":"259","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"260","line":9,"column":5,"nodeType":"249","messageId":"250","endLine":9,"endColumn":10},{"ruleId":"247","severity":1,"message":"259","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"260","line":9,"column":5,"nodeType":"249","messageId":"250","endLine":9,"endColumn":10},{"ruleId":"247","severity":1,"message":"259","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":11},{"ruleId":"247","severity":1,"message":"260","line":9,"column":5,"nodeType":"249","messageId":"250","endLine":9,"endColumn":10},{"ruleId":"247","severity":1,"message":"251","line":13,"column":5,"nodeType":"249","messageId":"250","endLine":13,"endColumn":10},{"ruleId":"238","severity":1,"message":"239","line":42,"column":8,"nodeType":"240","endLine":42,"endColumn":31,"suggestions":"261"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["262"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["263"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.",["264"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"265","text":"266"},["267"],"'Button' is defined but never used.","'Modal' is defined but never used.",["268"],{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"272","fix":"273"},[7148,7148]," rel=\"noreferrer\"",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [props, props.carregarNoticia]",{"range":"278","text":"279"},{"range":"280","text":"279"},"Update the dependencies array to be: [props, props.carregarDocumento]",{"range":"281","text":"282"},"Update the dependencies array to be: [props, props.carregarSecao]",{"range":"283","text":"284"},"Update the dependencies array to be: [props, props.carregarUsuario]",{"range":"285","text":"286"},[2326,2349],"[props, props.carregarNoticia]",[1759,1782],[1426,1451],"[props, props.carregarDocumento]",[1101,1122],"[props, props.carregarSecao]",[1102,1125],"[props, props.carregarUsuario]"]