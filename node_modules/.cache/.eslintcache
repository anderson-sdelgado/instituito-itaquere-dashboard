[{"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\index.js":"1","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\dashboard.js":"2","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\home\\home.js":"4","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\noticias.js":"5","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\cabecalho.js":"6","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\menu.js":"7","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\noticia.model.js":"8","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\balancetes.js":"9","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\tabela-noticias.js":"10","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\editar-noticia.js":"11","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\secao.model.js":"12","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\documento.model.js":"13","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\ordenacao.js":"14","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\itens-tabela-noticias.js":"15","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\paginacao.js":"16","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\remover-noticia.js":"17","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-upload.js":"18","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-server.js":"19","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\cadastrar-noticia.js":"20","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\itens-balancetes.js":"21","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\editar-documento.js":"22","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\cadastrar-documento.js":"23","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\cadastrar-secao.js":"24","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\editar-secao.js":"25","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\alterar-status-noticia.js":"26","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-documento.js":"27","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-secao.js":"28","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-documento.js":"29","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-secao.js":"30","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\usuarios.js":"31","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\editar-usuario.js":"32","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\cadastrar-usuario.js":"33","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\tabela-usuarios.js":"34","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\usuario.model.js":"35","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\itens-tabela-usuarios.js":"36","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\ordenacao.js":"37","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\paginacao.js":"38","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\remover-usuario.js":"39","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\login\\login.js":"40","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\constants.js":"41","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-video-upload.js":"42","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-video-server.js":"43"},{"size":643,"mtime":1663947655439,"results":"44","hashOfConfig":"45"},{"size":1220,"mtime":1660765846407,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1657551110891,"results":"47","hashOfConfig":"45"},{"size":716,"mtime":1658230092759,"results":"48","hashOfConfig":"45"},{"size":6326,"mtime":1663944411483,"results":"49","hashOfConfig":"45"},{"size":1263,"mtime":1658233900742,"results":"50","hashOfConfig":"45"},{"size":1273,"mtime":1660762580854,"results":"51","hashOfConfig":"45"},{"size":264,"mtime":1660232675051,"results":"52","hashOfConfig":"45"},{"size":7051,"mtime":1664220314691,"results":"53","hashOfConfig":"45"},{"size":8262,"mtime":1659710718633,"results":"54","hashOfConfig":"45"},{"size":16678,"mtime":1664220612660,"results":"55","hashOfConfig":"45"},{"size":345,"mtime":1660318616230,"results":"56","hashOfConfig":"45"},{"size":273,"mtime":1660318590177,"results":"57","hashOfConfig":"45"},{"size":1168,"mtime":1659616976705,"results":"58","hashOfConfig":"45"},{"size":2477,"mtime":1663944194455,"results":"59","hashOfConfig":"45"},{"size":2370,"mtime":1659458610184,"results":"60","hashOfConfig":"45"},{"size":4785,"mtime":1663944334282,"results":"61","hashOfConfig":"45"},{"size":1513,"mtime":1664199482690,"results":"62","hashOfConfig":"45"},{"size":1476,"mtime":1664198720092,"results":"63","hashOfConfig":"45"},{"size":14751,"mtime":1664974496439,"results":"64","hashOfConfig":"45"},{"size":12819,"mtime":1663943623195,"results":"65","hashOfConfig":"45"},{"size":10330,"mtime":1663943373856,"results":"66","hashOfConfig":"45"},{"size":8837,"mtime":1663943372124,"results":"67","hashOfConfig":"45"},{"size":7904,"mtime":1663943321212,"results":"68","hashOfConfig":"45"},{"size":8267,"mtime":1663943445792,"results":"69","hashOfConfig":"45"},{"size":5409,"mtime":1663944162246,"results":"70","hashOfConfig":"45"},{"size":1769,"mtime":1663943663309,"results":"71","hashOfConfig":"45"},{"size":1706,"mtime":1663943685611,"results":"72","hashOfConfig":"45"},{"size":1848,"mtime":1663943535706,"results":"73","hashOfConfig":"45"},{"size":1726,"mtime":1663943568730,"results":"74","hashOfConfig":"45"},{"size":6154,"mtime":1663944607389,"results":"75","hashOfConfig":"45"},{"size":8161,"mtime":1663944505272,"results":"76","hashOfConfig":"45"},{"size":7530,"mtime":1663944469622,"results":"77","hashOfConfig":"45"},{"size":7993,"mtime":1660562619636,"results":"78","hashOfConfig":"45"},{"size":179,"mtime":1660325885133,"results":"79","hashOfConfig":"45"},{"size":1770,"mtime":1660564021502,"results":"80","hashOfConfig":"45"},{"size":1168,"mtime":1659616976705,"results":"81","hashOfConfig":"45"},{"size":2370,"mtime":1659458610184,"results":"82","hashOfConfig":"45"},{"size":4791,"mtime":1663944544262,"results":"83","hashOfConfig":"45"},{"size":5955,"mtime":1663943803529,"results":"84","hashOfConfig":"45"},{"size":441,"mtime":1664971622932,"results":"85","hashOfConfig":"45"},{"size":1549,"mtime":1664192206484,"results":"86","hashOfConfig":"45"},{"size":1452,"mtime":1664198638368,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"52cqri",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\index.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\dashboard.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\reportWebVitals.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\home\\home.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\noticias.js",["226"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport Noticia from '../../models/noticia.model';\r\nimport Cabecalho from '../../utils/cabecalho';\r\nimport Menu from '../../utils/menu';\r\nimport TabelaNoticias from './tabela/tabela-noticias';\r\nimport EditarNoticia from './formulario/editar-noticia';\r\nimport CadastrarNoticia from './formulario/cadastrar-noticia';\r\nimport { \r\n    Container,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport * as constants from '../../utils/constants';\r\n\r\nfunction Noticias() {\r\n\r\n    const URL_LISTAR_NOTICIAS = constants.URL_BASE + constants.NOTICIA;\r\n\r\n    const [exibirTabela, setExibirTabela] = useState(true);\r\n    const [exibirEditar, setExibirEditar] = useState(false);\r\n    const [exibirCadastrar, setExibirCadastrar] = useState(false);\r\n    const [noticias, setNoticias] = useState([]);\r\n    const [carregarNoticias, setCarregarNoticias] = useState(true);\r\n    const [noticia, setNoticia] = useState(new Noticia());\r\n    const [carregarNoticia, setCarregarNoticia] = useState(false);\r\n    const [paginaAtual, setPaginaAtual] = useState(1);\r\n    const [ordenar, setOrdenar] = useState(0);\r\n    const [filtro, setFiltro] = useState('');\r\n    const [countPage, setCountPage] = useState(3);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterNoticias(){\r\n            try{\r\n                let ordem = '';\r\n                if(ordenar === 1){\r\n                    ordem = 'codigo ASC';\r\n                } else if(ordenar === 2){\r\n                    ordem = 'codigo DESC';\r\n                } else if(ordenar === 3){\r\n                    ordem = 'titulo ASC';\r\n                } else if(ordenar === 4){\r\n                    ordem = 'titulo DESC';\r\n                } \r\n                const params = `?page=${paginaAtual}&countpage=${countPage}&order=${ordem}&filter=${filtro}`;\r\n                let { data } = await axios.get(URL_LISTAR_NOTICIAS + params);\r\n                if(data.status==='success'){\r\n                    setNoticias(data.data);\r\n                    setTotalItems(parseInt(data.count));\r\n                } else {\r\n                    setMessagem(data.response);\r\n                    setExibirModalErro(true);\r\n                }\r\n            } catch(err){\r\n                setNoticias([]);\r\n                setMessagem(err.message);\r\n                setExibirModalErro(true);\r\n            }\r\n        }\r\n\r\n        if(carregarNoticias){\r\n            obterNoticias();\r\n            setCarregarNoticias(false);\r\n        }\r\n    }, [carregarNoticias, paginaAtual, countPage, ordenar, filtro]);\r\n\r\n    function handleExibirTabela(){\r\n        setExibirTabela(true);\r\n        setExibirEditar(false);\r\n        setExibirCadastrar(false);\r\n    }\r\n\r\n    function handleExibirCadastrar(){\r\n        setExibirCadastrar(true);\r\n        setExibirTabela(false);\r\n        setExibirEditar(false);\r\n        setCarregarNoticia(true);\r\n    }\r\n\r\n    function handleExibirEditar(noticia){\r\n        setNoticia(noticia);\r\n        setExibirEditar(true);\r\n        setExibirTabela(false);\r\n        setExibirCadastrar(false);\r\n        setCarregarNoticia(true);\r\n    }\r\n\r\n    function handleMudarPagina(pagina) {\r\n        setPaginaAtual(pagina);\r\n        setCarregarNoticias(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Cabecalho />\r\n            <Container \r\n                fluid>\r\n                <Row>\r\n                    <Col \r\n                        md={2}\r\n                        className=\"vh-100\" >\r\n                        <Menu />\r\n                    </Col>\r\n                    <Col md={10} >\r\n                        <TabelaNoticias\r\n                            visivel={exibirTabela}\r\n                            handleExibirCadastrar={handleExibirCadastrar}\r\n                            handleExibirEditar={handleExibirEditar}\r\n                            noticias={noticias}\r\n                            setRecarregarNoticias={setCarregarNoticias}\r\n                            totalItems={totalItems} \r\n                            paginaAtual={paginaAtual} \r\n                            handleMudarPagina={handleMudarPagina}\r\n                            countPage={countPage}\r\n                            setCountPage={setCountPage}\r\n                            filtro={filtro}\r\n                            setFiltro={setFiltro}\r\n                            ordenar={ordenar}\r\n                            setOrdenar={setOrdenar}/>\r\n                        <CadastrarNoticia\r\n                            visivel={exibirCadastrar}\r\n                            handleExibirTabela={handleExibirTabela}\r\n                            setRecarregarNoticias={setCarregarNoticias}\r\n                            carregarNoticia={carregarNoticia} \r\n                            setCarregarNoticia={setCarregarNoticia}/>\r\n                        <EditarNoticia\r\n                            visivel={exibirEditar}\r\n                            handleExibirTabela={handleExibirTabela}\r\n                            setRecarregarNoticias={setCarregarNoticias}\r\n                            noticia={noticia}\r\n                            carregarNoticia={carregarNoticia} \r\n                            setCarregarNoticia={setCarregarNoticia}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Erro ao buscar Notícias: {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div> \r\n     );\r\n}\r\n\r\nexport default Noticias;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\cabecalho.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\menu.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\noticia.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\balancetes.js",["227"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport Cabecalho from '../../utils/cabecalho';\r\nimport Menu from '../../utils/menu';\r\nimport ItensBalancetes from './lista/itens-balancetes';\r\nimport { \r\n    Container,\r\n    Row,\r\n    Col,\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Documento from '../../models/documento.model';\r\nimport Secao from '../../models/secao.model';\r\nimport CadastrarSecao from './formulario/secao/cadastrar-secao';\r\nimport EditarSecao from './formulario/secao/editar-secao';\r\nimport CadastrarDocumento from './formulario/documento/cadastrar-documento';\r\nimport EditarDocumento from './formulario/documento/editar-documento';\r\nimport * as constants from '../../utils/constants';\r\n\r\nfunction Balancetes() {\r\n\r\n    const URL_LISTAR_SECAO = constants.URL_BASE + constants.SECAO;\r\n    const URL_LISTAR_DOCUMENTO = constants.URL_BASE + constants.DOCUMENTO;\r\n\r\n    const [secoes, setSecoes] = useState([]);\r\n    const [documentos, setDocumentos] = useState([]);\r\n    const [secao, setSecao] = useState(new Secao());\r\n    const [documento, setDocumento] = useState(new Documento());\r\n    const [codParenteSecao, setCodParenteSecao] = useState('');\r\n    const [caminho, setCaminho] = useState('');\r\n    const [nivel, setNivel] = useState('');\r\n    const [carregarBalancetes, setCarregarBalancetes] = useState(true);\r\n    const [exibirItens, setExibirItens] = useState(true);\r\n    const [exibirCadastrarSecao, setExibirCadastrarSecao] = useState(false);\r\n    const [exibirEditarSecao, setExibirEditarSecao] = useState(false);\r\n    const [exibirCadastrarDocumento, setExibirCadastrarDocumento] = useState(false);\r\n    const [exibirEditarDocumento, setExibirEditarDocumento] = useState(false);\r\n    const [carregarSecao, setCarregarSecao] = useState(false);\r\n    const [carregarDocumento, setCarregarDocumento] = useState(false);\r\n    \r\n    useEffect(() => {\r\n\r\n        async function obterSecao(){\r\n            let { data } = await axios.get(URL_LISTAR_SECAO);\r\n            setSecoes(data.data);\r\n        }\r\n\r\n        async function obterDocumento(){\r\n            let { data } = await axios.get(URL_LISTAR_DOCUMENTO);\r\n            setDocumentos(data.data);\r\n        }\r\n\r\n        if(carregarBalancetes){\r\n            obterSecao();\r\n            obterDocumento();\r\n            setCarregarBalancetes(false);\r\n        }\r\n    }, [carregarBalancetes]);\r\n\r\n    function handleExibirItensBalancete(){\r\n        setExibirItens(true);\r\n        setExibirCadastrarSecao(false);\r\n        setExibirEditarSecao(false);\r\n        setExibirCadastrarDocumento(false);\r\n        setExibirEditarDocumento(false);\r\n    }\r\n\r\n    function handleExibirCadastrarSecao(codParenteSecao, caminho, nivel){\r\n        setCodParenteSecao(codParenteSecao);\r\n        setCaminho(caminho);\r\n        setNivel(nivel);\r\n        setExibirItens(false);\r\n        setExibirCadastrarSecao(true);\r\n        setExibirEditarSecao(false);\r\n        setExibirCadastrarDocumento(false);\r\n        setExibirEditarDocumento(false);\r\n    }\r\n\r\n    function handleExibirEditarSecao(secao){\r\n        setSecao(secao);\r\n        setExibirItens(false);\r\n        setExibirCadastrarSecao(false);\r\n        setExibirEditarSecao(true);\r\n        setExibirCadastrarDocumento(false);\r\n        setExibirEditarDocumento(false);\r\n        setCarregarSecao(true);\r\n    }\r\n\r\n    function handleExibirCadastrarDocumento(codParenteSecao, caminho, nivel){\r\n        setCodParenteSecao(codParenteSecao);\r\n        setCaminho(caminho);\r\n        setNivel(nivel);\r\n        setExibirItens(false);\r\n        setExibirCadastrarSecao(false);\r\n        setExibirEditarSecao(false);\r\n        setExibirCadastrarDocumento(true);\r\n        setExibirEditarDocumento(false);\r\n    }\r\n\r\n    function handleExibirEditarDocumento(documento, caminho){\r\n        setDocumento(documento);\r\n        setCaminho(caminho);\r\n        setExibirItens(false);\r\n        setExibirCadastrarSecao(false);\r\n        setExibirEditarSecao(false);\r\n        setExibirCadastrarDocumento(false);\r\n        setExibirEditarDocumento(true);\r\n        setCarregarDocumento(true);\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Cabecalho />\r\n            <Container \r\n                fluid>\r\n                <Row>\r\n                    <Col \r\n                        md={2}\r\n                        className=\"vh-100\" >\r\n                        <Menu />\r\n                    </Col>\r\n                    <Col md={10} >\r\n                        <h2 \r\n                            className=\"mt-3\">\r\n                            Balancetes\r\n                        </h2>\r\n                        <ItensBalancetes\r\n                            visivel={exibirItens}\r\n                            secoes={secoes}\r\n                            documentos={documentos}\r\n                            handleExibirCadastrarSecao={handleExibirCadastrarSecao}\r\n                            handleExibirEditarSecao={handleExibirEditarSecao}\r\n                            handleExibirCadastrarDocumento={handleExibirCadastrarDocumento}\r\n                            handleExibirEditarDocumento={handleExibirEditarDocumento}\r\n                            setCarregarBalancetes={setCarregarBalancetes} />\r\n                        <CadastrarSecao\r\n                            visivel={exibirCadastrarSecao}\r\n                            codParenteSecao={codParenteSecao}\r\n                            caminho={caminho}\r\n                            nivel={nivel}\r\n                            setCarregarBalancetes={setCarregarBalancetes}\r\n                            handleExibirItensBalancete={handleExibirItensBalancete} />\r\n                        <EditarSecao\r\n                            visivel={exibirEditarSecao}\r\n                            secao={secao}\r\n                            setCarregarBalancetes={setCarregarBalancetes}\r\n                            handleExibirItensBalancete={handleExibirItensBalancete}\r\n                            carregarSecao={carregarSecao} \r\n                            setCarregarSecao={setCarregarSecao} />\r\n                        <CadastrarDocumento\r\n                            visivel={exibirCadastrarDocumento}\r\n                            codParenteSecao={codParenteSecao}\r\n                            caminho={caminho}\r\n                            setCarregarBalancetes={setCarregarBalancetes}\r\n                            handleExibirItensBalancete={handleExibirItensBalancete} />\r\n                        <EditarDocumento\r\n                            visivel={exibirEditarDocumento}\r\n                            documento={documento}\r\n                            caminho={caminho}\r\n                            setCarregarBalancetes={setCarregarBalancetes}\r\n                            handleExibirItensBalancete={handleExibirItensBalancete}\r\n                            carregarDocumento={carregarDocumento} \r\n                            setCarregarDocumento={setCarregarDocumento} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Balancetes;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\tabela-noticias.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\editar-noticia.js",["228","229","230"],[],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image,\r\n    Spinner\r\n} from 'react-bootstrap';\r\nimport Noticia from '../../../models/noticia.model';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport GaleriaImagensServer from './galeria-imagens-server';\r\nimport GaleriaImagensUpload from './galeria-imagens-upload';\r\nimport GaleriaVideoServer from './galeria-video-server';\r\nimport GaleriaVideoUpload from './galeria-video-upload';\r\nimport * as constants from '../../../utils/constants';\r\n\r\nfunction EditarNoticia(props) {\r\n\r\n    const URL_IMG = constants.URL_BASE + constants.LOCAL_IMG;\r\n    const CADASTRAR_NOTICIA = constants.URL_BASE + constants.NOTICIA;\r\n    const LISTAR_GALERIA = constants.URL_BASE + constants.GALERIA + '/';\r\n    const LISTAR_VIDEO = constants.URL_BASE + constants.VIDEO + '/';\r\n\r\n    const [capa, setCapa] = useState('');\r\n    const [galeriaImagensServer, setGaleriaImagensServer] = useState([]);\r\n    const [galeriaImagensUpload, setGaleriaImagensUpload] = useState([]);\r\n    const [galeriaVideoServer, setGaleriaVideoServer] = useState([]);\r\n    const [galeriaVideoUpload, setGaleriaVideoUpload] = useState([]);\r\n    const [imagem, setImagem] = useState();\r\n    const [codigo, setCodigo] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [conteudo, setConteudo] = useState('');\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [exibirImage, setExibirImage] = useState(false);\r\n    const [qtdeGaleriaImagens, setQtdeGaleriaImagens] = useState(0);\r\n    const [qtdeGaleriaVideo, setQtdeGaleriaVideo] = useState(0);\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirProcessando, setExibirProcessando] = useState(false);\r\n\r\n    const capaElement = useRef();\r\n    const galeriaElement = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterGaleriaImage(){\r\n            let { data } = await axios.get(LISTAR_GALERIA + props.noticia.codigo);\r\n            setGaleriaImagensServer(data.data);\r\n            setQtdeGaleriaImagens(data.data.length);\r\n        }\r\n\r\n        async function obterGaleiraVideo(){\r\n            let { data } = await axios.get(LISTAR_VIDEO + props.noticia.codigo);\r\n            setGaleriaVideoServer(data.data);\r\n            setQtdeGaleriaVideo(data.data.length);\r\n        }\r\n\r\n        async function obterNoticia(){\r\n            \r\n            setGaleriaImagensUpload([]);\r\n            setGaleriaVideoUpload([]);\r\n            setImagem();\r\n            setCodigo(props.noticia.codigo);\r\n            setTitulo(props.noticia.titulo);\r\n            setConteudo(props.noticia.conteudo);\r\n            setCapa(URL_IMG + props.noticia.capa);\r\n            setExibirImage(true);\r\n            setExibirProcessando(false);\r\n            \r\n            capaElement.current.required = false;\r\n            capaElement.current.value = \"\";\r\n            galeriaElement.current.value = \"\";\r\n        }\r\n\r\n        if(props.carregarNoticia){\r\n            obterGaleriaImage();\r\n            obterGaleiraVideo()\r\n            obterNoticia();\r\n            props.setCarregarNoticia(false);\r\n        }\r\n    }, [props.carregarNoticia]);\r\n\r\n    async function salvarNoticia(event){\r\n        try {\r\n            event.preventDefault();\r\n            setExibirProcessando(true);\r\n            const novaNoticia = new Noticia(conteudo, titulo);\r\n            const formData = new FormData();\r\n            formData.append('image', imagem);\r\n            formData.append('data', JSON.stringify(novaNoticia));\r\n\r\n            galeriaImagensUpload.map((img, index) => {\r\n                var cod = index + 1;\r\n                formData.append('gallery' + cod, img);\r\n            });\r\n            formData.append('galleryserver', JSON.stringify(galeriaImagensServer));\r\n            \r\n            galeriaVideoUpload.map((video, index) => {\r\n                var cod = index + 1;\r\n                formData.append('video' + cod, video);\r\n            });\r\n            formData.append('videoserver', JSON.stringify(galeriaVideoServer));\r\n\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(CADASTRAR_NOTICIA + '/' + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivelCapa() {\r\n        return exibirImage ? null : 'hidden';\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? 'mt-3' : 'hidden';\r\n    }\r\n\r\n    function handleImage(event){\r\n        setImagem(event.target.files[0]);\r\n        setExibirImage(true);\r\n        setCapa(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    function handleGalleryImagens(event){\r\n        setGaleriaImagensUpload(Array.from(event.target.files));\r\n    }\r\n\r\n    function handleGalleryVideo(event){\r\n        setGaleriaVideoUpload(Array.from(event.target.files));\r\n    }\r\n\r\n    function handleTxtTitulo(event){\r\n        setTitulo(event.target.value);\r\n    }\r\n\r\n    function handleTxtConteudo(event){\r\n        setConteudo(event.target.value);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarNoticias(true);\r\n    }\r\n\r\n    function handleGaleriaImagensServer(codigo){\r\n        setGaleriaImagensServer(galeriaImagensServer.filter(image => image.codigo !== codigo));\r\n    }\r\n\r\n    function handleGaleriaImagensUpload(imageRet){\r\n        setGaleriaImagensUpload(galeriaImagensUpload.filter(image => image !== imageRet));\r\n    }\r\n\r\n    function handleGaleriaVideoServer(codigo){\r\n        setGaleriaVideoServer(galeriaVideoServer.filter(video => video.codigo !== codigo));\r\n    }\r\n\r\n    function handleGaleriaVideoUpload(videoRet){\r\n        setGaleriaVideoUpload(galeriaVideoUpload.filter(video => video !== videoRet));\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Notícia\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarNoticia}>\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Capa (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={5}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleImage}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={capaElement} />\r\n                                </Col>\r\n                                <Col \r\n                                    md={3}\r\n                                    className={visivelCapa()}>\r\n                                    <Image \r\n                                        src={capa}\r\n                                        thumbnail />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Título:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={titulo} \r\n                                        onChange={handleTxtTitulo}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        as=\"textarea\" \r\n                                        rows={10}\r\n                                        value={conteudo} \r\n                                        onChange={handleTxtConteudo} \r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Galeria (PNG ou JPG):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\" multiple\r\n                                        onChange={handleGalleryImagens}\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                        ref={galeriaElement} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row} >\r\n                                <GaleriaImagensServer \r\n                                    imagens={galeriaImagensServer}\r\n                                    handleGaleriaImagensServer={handleGaleriaImagensServer}/>\r\n                                <GaleriaImagensUpload \r\n                                    imagens={galeriaImagensUpload}\r\n                                    qtdeGaleriaImagens={qtdeGaleriaImagens}\r\n                                    handleGaleriaImagensUpload={handleGaleriaImagensUpload}/>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Video (MP4):\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\" multiple\r\n                                        onChange={handleGalleryVideo}\r\n                                        accept=\"video/mp4\"\r\n                                        ref={galeriaElement} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row} >\r\n                                <GaleriaVideoServer \r\n                                    videos={galeriaVideoServer}\r\n                                    handleGaleriaVideoServer={handleGaleriaVideoServer}/>\r\n                                <GaleriaVideoUpload \r\n                                    videos={galeriaVideoUpload}\r\n                                    qtdeGaleriaVideo={qtdeGaleriaVideo}\r\n                                    handleGaleriaVideoUpload={handleGaleriaVideoUpload}/>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={props.handleExibirTabela} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    md={6}\r\n                                    className={exibirProcessando ? 'hidden' : 'text-start'} >\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\" >\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    md={6}\r\n                                    className={exibirProcessando ? 'text-start' : 'hidden'}>\r\n                                    <Spinner\r\n                                        animation=\"border\"/>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nEditarNoticia.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    handleExibirTabela: PropTypes.func.isRequired,\r\n    setRecarregarNoticias: PropTypes.func.isRequired,\r\n    noticia: PropTypes.object.isRequired,\r\n    carregarNoticia: PropTypes.bool.isRequired,\r\n    setCarregarNoticia: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarNoticia;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\secao.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\documento.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\ordenacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\itens-tabela-noticias.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\paginacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\remover-noticia.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-upload.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-imagens-server.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\cadastrar-noticia.js",["231","232","233"],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\itens-balancetes.js",["234","235"],[],"import { useState } from 'react';\r\nimport { \r\n    faEdit, \r\n    faPlus,\r\n    faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport DownDocumento from './down-documento';\r\nimport UpDocumento from './up-documento';\r\nimport DownSecao from './down-secao';\r\nimport UpSecao from './up-secao';\r\nimport * as constants from '../../../utils/constants';\r\n\r\nfunction ItensBalancetes(props) {\r\n\r\n    let key = 0;\r\n\r\n    const API_URL_REMOVER_DOCUMENTO = constants.URL_BASE + constants.DOCUMENTO + '/';\r\n    const API_URL_REMOVER_SECAO = constants.URL_BASE + constants.SECAO + '/';\r\n\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [messagem, setMessagem] = useState('');\r\n    const [tipoRemocao, setTipoRemocao] = useState(0);\r\n    const [codigoRemocao, setCodigoRemocao] = useState(0);\r\n    const [descricaoRemocao, setDescricaoRemocao] = useState('');\r\n    const [descricaoItemRemocao, setDescricaoItemRemocao] = useState('');\r\n\r\n    async function handleRemoverDocumento(){\r\n        try {\r\n            let { data } = await axios.delete(API_URL_REMOVER_DOCUMENTO + codigoRemocao);\r\n            setExibirModal(false);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Exclusão do Registro Documento: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch(err) {\r\n            setExibirModal(false);\r\n            setMessagem(\"Erro na Exclusão do Registro Documento: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    async function handleRemoverSecao(){\r\n        try {\r\n            let { data } = await axios.delete(API_URL_REMOVER_SECAO + codigoRemocao);\r\n            setExibirModal(false);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Exclusão do Registro Secao: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch(err) {\r\n            setExibirModal(false);\r\n            setMessagem(\"Erro na Exclusão do Registro Secao: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function handleRemover(event){\r\n        event.preventDefault();\r\n        if(tipoRemocao === 1){\r\n            handleRemoverSecao();\r\n        } else {\r\n            handleRemoverDocumento();\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirCadastrarSecao(event, codParenteSecao, caminho, nivel){\r\n        event.preventDefault();\r\n        props.handleExibirCadastrarSecao(codParenteSecao, caminho, nivel);\r\n    }\r\n\r\n    function handleExibirEditarSecao(event, secao){\r\n        event.preventDefault();\r\n        props.handleExibirEditarSecao(secao);\r\n    }\r\n\r\n    function handleExibirCadastrarDocumento(event, codParenteSecao, caminho, nivel){\r\n        event.preventDefault();\r\n        props.handleExibirCadastrarDocumento(codParenteSecao, caminho, nivel);\r\n    }\r\n\r\n    function handleExibirEditarDocumento(event, secao, caminho){\r\n        event.preventDefault();\r\n        props.handleExibirEditarDocumento(secao, caminho);\r\n    }\r\n\r\n    function handleAbrirModalSecao(event, secao){\r\n        event.preventDefault();\r\n        setTipoRemocao(1);\r\n        setCodigoRemocao(parseInt(secao.codigo));\r\n        setDescricaoRemocao('Seção');\r\n        setDescricaoItemRemocao(secao.descricao);\r\n        setExibirModal(true);\r\n    }\r\n\r\n    function handleAbrirModalDocumento(event, documento){\r\n        event.preventDefault();\r\n        setTipoRemocao(2);\r\n        setCodigoRemocao(parseInt(documento.codigo));\r\n        setDescricaoRemocao('Documento');\r\n        setDescricaoItemRemocao(documento.descricao);\r\n        setExibirModal(true);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function gerarItemSecao(codigo, nivel){\r\n        let listSecao = [];\r\n        listSecao = props.secoes.filter(secao => {\r\n            return ((parseInt(secao.nivel) === nivel) && (parseInt(secao.codparente) === codigo));\r\n        });\r\n        let items = [];\r\n        listSecao.map(secao => {\r\n            items.push(gerarDescrSecao(secao));\r\n            items.push(gerarSecao(secao));\r\n        });\r\n        return(items);\r\n    }\r\n\r\n    function gerarSecao(secao){\r\n        return(\r\n            <ul key={key++}>\r\n                {gerarItemCadastro(secao)}\r\n                {gerarDocumento(secao)}\r\n                {gerarItemSecao(parseInt(secao.codigo), (parseInt(secao.nivel) + 1))}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    function gerarDocumento(secao){\r\n        let items = [];\r\n        props.documentos.map(documento => {\r\n            if(parseInt(documento.secao) === parseInt(secao.codigo)){\r\n                items.push(gerarDescrDocumento(secao, documento));\r\n            }\r\n        });\r\n        return(items);\r\n    }\r\n\r\n    function gerarDescrSecao(secao) {\r\n        return(\r\n            <li key={key++} className=\"mb-1\">\r\n                <b>{secao.descricao}</b>\r\n                &nbsp;\r\n                <FontAwesomeIcon \r\n                    className={'btn btn-outline-primary btn-sm'}\r\n                    onClick={(event) => handleExibirEditarSecao(event, secao)}\r\n                    icon={faEdit} />\r\n                &nbsp;\r\n                <FontAwesomeIcon\r\n                    className={'btn btn-danger btn-sm'}\r\n                    onClick={(event) => handleAbrirModalSecao(event, secao)}\r\n                    icon={faTrashAlt} />\r\n                &nbsp;\r\n                <UpSecao\r\n                    secao={secao}\r\n                    setCarregarBalancetes={props.setCarregarBalancetes} />\r\n                &nbsp;\r\n                <DownSecao\r\n                    secao={secao}\r\n                    setCarregarBalancetes={props.setCarregarBalancetes} />\r\n            </li>\r\n        );\r\n    }\r\n\r\n    function gerarDescrDocumento(secao, documento){\r\n        return(\r\n            <li key={key++} className=\"mb-1\">\r\n                {documento.descricao}\r\n                &nbsp;\r\n                <FontAwesomeIcon \r\n                    className={'btn btn-outline-primary btn-sm'}\r\n                    onClick={(event) => handleExibirEditarDocumento(event, documento, secao.caminho)}\r\n                    icon={faEdit} />\r\n                &nbsp;\r\n                <FontAwesomeIcon\r\n                    className={'btn btn-danger btn-sm'}\r\n                    onClick={(event) => handleAbrirModalDocumento(event, documento)}\r\n                    icon={faTrashAlt} />\r\n                &nbsp;\r\n                <UpDocumento\r\n                    documento={documento}\r\n                    setCarregarBalancetes={props.setCarregarBalancetes} />\r\n                &nbsp;\r\n                <DownDocumento\r\n                    documento={documento}\r\n                    setCarregarBalancetes={props.setCarregarBalancetes} />\r\n            </li>\r\n        );\r\n    }\r\n\r\n    function gerarItemCadastro(secao){\r\n        if(parseInt(secao.nivel) < 4){\r\n            return (<li key={key++} className=\"mb-1\">\r\n                    <Button \r\n                        className={'btn btn-success btn-sm'}\r\n                        onClick={(event) => handleExibirCadastrarSecao(event, secao.codigo, secao.caminho, secao.nivel)} >\r\n                        <FontAwesomeIcon \r\n                            icon={faPlus} />\r\n                        &nbsp;\r\n                        Nova Secao \r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button \r\n                        className={'btn btn-success btn-sm'}\r\n                        onClick={(event) => handleExibirCadastrarDocumento(event, secao.codigo, secao.caminho, secao.nivel)} >\r\n                        <FontAwesomeIcon \r\n                            icon={faPlus} />\r\n                        &nbsp;\r\n                        Novo Documento \r\n                    </Button>\r\n                </li>);\r\n        }\r\n        else{\r\n            return (<li key={key++} className=\"mb-1\">\r\n                    <Button \r\n                        className={'btn btn-success btn-sm'}\r\n                        onClick={(event) => handleExibirCadastrarDocumento(event, '', '', '')} >\r\n                        <FontAwesomeIcon \r\n                            icon={faPlus} />\r\n                        &nbsp;\r\n                        Novo Documento\r\n                    </Button>\r\n                </li>);\r\n        }\r\n    }\r\n\r\n    function gerarItemCadastroRaiz(){\r\n        return (<li key={key++} className=\"mb-1\">\r\n                <Button \r\n                    className={'btn btn-success btn-sm'}\r\n                    onClick={(event) => handleExibirCadastrarSecao(event, '', '', '')} >\r\n                    <FontAwesomeIcon \r\n                        icon={faPlus} />\r\n                    &nbsp;\r\n                    Nova Secao \r\n                </Button>\r\n            </li>);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={visivel()}>\r\n            {gerarItemCadastroRaiz()}    \r\n            {gerarItemSecao(0, 1)}\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} \r\n                data-testid=\"modal\" >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Remover {descricaoRemocao}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Deseja realmente remover a seguinte {descricaoRemocao}?\r\n                    <br />\r\n                    <strong>{descricaoItemRemocao}</strong>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"primary\" \r\n                        onClick={handleRemover}\r\n                        data-testid=\"btn-remover\" >\r\n                        Sim\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"light\" \r\n                        onClick={handleFecharModal}\r\n                        data-testid=\"btn-fechar-modal\" >\r\n                        Não\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nItensBalancetes.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    secoes: PropTypes.array.isRequired,\r\n    documentos: PropTypes.array.isRequired,\r\n    handleExibirCadastrarSecao: PropTypes.func.isRequired,\r\n    handleExibirEditarSecao: PropTypes.func.isRequired,\r\n    handleExibirCadastrarDocumento: PropTypes.func.isRequired,\r\n    handleExibirEditarDocumento: PropTypes.func.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ItensBalancetes;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\editar-documento.js",["236","237"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Documento from '../../../../models/documento.model';\r\nimport * as constants from '../../../../utils/constants';\r\n\r\nfunction EditarDocumento(props) {\r\n\r\n    const URL_DOC = constants.URL_BASE + constants.LOCAL_DOC;\r\n    const URL_CADASTRAR_DOCUMENTO = constants.URL_BASE + constants.DOCUMENTO + '/';\r\n\r\n    const [descricaoDocumento, setDescricaoDocumento] = useState('');\r\n    const [documento, setDocumento] = useState();\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [codigo, setCodigo] = useState('');\r\n    const [caminho, setCaminho] = useState('');\r\n    const [documentoServ, setDocumentoServ] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        function obterDocumento(){\r\n            setCodigo(props.documento.codigo);\r\n            setDescricaoDocumento(props.documento.descricao);\r\n            setCaminho(props.caminho);\r\n            setDocumentoServ(URL_DOC + props.documento.documento);\r\n        }\r\n\r\n        if(props.carregarDocumento){\r\n            obterDocumento();\r\n            props.setCarregarDocumento(false);\r\n        }\r\n    }, [props.carregarDocumento]);\r\n\r\n    async function salvarDocumento(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novoDocumento = new Documento(descricaoDocumento, '', '');\r\n            const formData = new FormData();\r\n            formData.append('document', documento);\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(URL_CADASTRAR_DOCUMENTO + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModal(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            if(props.codNoticia === 0){\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + err.message);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            }\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirItensBalancete(event){\r\n        event.preventDefault();\r\n        props.handleExibirItensBalancete();\r\n    }\r\n\r\n    function handleDescricaoDocumento(event){\r\n        setDescricaoDocumento(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleDocumento(event){\r\n        setDocumento(event.target.files[0]);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Documento \r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarDocumento} >\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Caminho:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {caminho}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={descricaoDocumento}\r\n                                        onChange={handleDescricaoDocumento}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Documento:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"file\"\r\n                                        onChange={handleDocumento}\r\n                                        accept=\"application/pdf\"\r\n                                        />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Documento Atual:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <a href={documentoServ} target=\"_blank\">\r\n                                        {descricaoDocumento}\r\n                                    </a>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={handleExibirItensBalancete} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModal} >\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro} >\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditarDocumento.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    documento: PropTypes.object.isRequired,\r\n    caminho: PropTypes.string.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n    handleExibirItensBalancete: PropTypes.func.isRequired,\r\n    carregarDocumento: PropTypes.bool.isRequired,\r\n    setCarregarDocumento: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarDocumento;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\documento\\cadastrar-documento.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\cadastrar-secao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\formulario\\secao\\editar-secao.js",["238","239"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport Secao from '../../../../models/secao.model';\r\nimport * as constants from '../../../../utils/constants';\r\n\r\nfunction EditarSecao(props) {\r\n\r\n    const URL_CADASTRAR_SECAO = constants.URL_BASE + constants.SECAO + '/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [codigo, setCodigo] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [caminho, setCaminho] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterSecao(){\r\n            setCodigo(props.secao.codigo);\r\n            setDescricao(props.secao.descricao);\r\n            setCaminho(props.secao.caminho);\r\n        }\r\n\r\n        if(props.carregarSecao){\r\n            obterSecao();\r\n            props.setCarregarSecao(false);\r\n        }\r\n    }, [props.carregarSecao]);\r\n\r\n    async function salvarSecao(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novaSecao = new Secao(props.secao.codparente, descricao, props.secao.nivel, '');\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novaSecao));\r\n            formData.append('method', 'put');\r\n            console.log(JSON.stringify(novaSecao));\r\n            console.log(URL_CADASTRAR_SECAO + props.secao.codigo);\r\n            let { data } = await axios.post(URL_CADASTRAR_SECAO + props.secao.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModal(true);\r\n            } else {\r\n                setMessagem(\"Erro na Criação de Novo Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? null : 'hidden';\r\n    }\r\n\r\n    function handleExibirItensBalancete(event){\r\n        event.preventDefault();\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleDescricaoSecao(event){\r\n        setDescricao(event.target.value);\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        setExibirModal(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirItensBalancete();\r\n        props.setCarregarBalancetes(true);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Seção\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarSecao} >\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Caminho:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {caminho}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Descrição:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={descricao} \r\n                                        onChange={handleDescricaoSecao}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={handleExibirItensBalancete} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModal} \r\n                onHide={handleFecharModal} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModal}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro} >\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditarSecao.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    secao: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n    handleExibirItensBalancete: PropTypes.func.isRequired,\r\n    carregarSecao: PropTypes.bool.isRequired,\r\n    setCarregarSecao: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarSecao;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\tabela\\alterar-status-noticia.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-documento.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\up-secao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-documento.js",["240","241"],[],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  \r\n    faSortDown\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { \r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Documento from '../../../models/documento.model';\r\nimport * as constants from '../../../utils/constants';\r\n\r\nfunction DownDocumento(props) {\r\n\r\n    const API_URL_UPDATE_DOCUMENTO = constants.URL_BASE + constants.DOCUMENTO + '/';\r\n\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    async function handleDownDocumento(event){\r\n        event.preventDefault();\r\n        try {\r\n            const novoDocumento = new Documento('', props.documento.secao, props.documento.posicao);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoDocumento));\r\n            formData.append('method', 'down');\r\n            let { data } = await axios.post(API_URL_UPDATE_DOCUMENTO + props.documento.codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                props.setCarregarBalancetes(true);\r\n            } else {\r\n                setMessagem(\"Erro Down do Registro: \" + data.response);\r\n                console.log(messagem);\r\n            }\r\n        } catch(err) {\r\n            setMessagem(\"Erro Down do Registro: \" + err.message);\r\n            console.log(messagem);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FontAwesomeIcon\r\n            className={'btn btn-outline-dark btn-sm'}\r\n            onClick={handleDownDocumento} \r\n            icon={faSortDown} />\r\n    );\r\n}\r\n\r\nDownDocumento.propTypes = {\r\n    documento: PropTypes.object.isRequired,\r\n    setCarregarBalancetes: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DownDocumento;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\balancetes\\lista\\down-secao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\usuarios.js",["242"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport Cabecalho from '../../utils/cabecalho';\r\nimport Menu from '../../utils/menu';\r\nimport TabelaUsuarios from './tabela/tabela-usuarios';\r\nimport EditarUsuario from './formulario/editar-usuario';\r\nimport CadastrarUsuario from './formulario/cadastrar-usuario';\r\nimport { \r\n    Container,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Usuario from '../../models/usuario.model';\r\nimport * as constants from '../../utils/constants';\r\n\r\nfunction Usuarios() {\r\n\r\n    const URL_LISTAR_USUARIOS = constants.URL_BASE + constants.USUARIO;\r\n\r\n    const [exibirTabela, setExibirTabela] = useState(true);\r\n    const [exibirEditar, setExibirEditar] = useState(false);\r\n    const [exibirCadastrar, setExibirCadastrar] = useState(false);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [carregarUsuarios, setCarregarUsuarios] = useState(true);\r\n    const [usuario, setUsuario] = useState(new Usuario());\r\n    const [carregarUsuario, setCarregarUsuario] = useState(false);\r\n    const [paginaAtual, setPaginaAtual] = useState(1);\r\n    const [ordenar, setOrdenar] = useState(0);\r\n    const [filtro, setFiltro] = useState('');\r\n    const [countPage, setCountPage] = useState(3);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [messagem, setMessagem] = useState('');\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        async function obterUsuarios(){\r\n            try{\r\n                let ordem = '';\r\n                if(ordenar === 1){\r\n                    ordem = 'codigo ASC';\r\n                } else if(ordenar === 2){\r\n                    ordem = 'codigo DESC';\r\n                } else if(ordenar === 3){\r\n                    ordem = 'nome ASC';\r\n                } else if(ordenar === 4){\r\n                    ordem = 'nome DESC';\r\n                } \r\n                const params = `?page=${paginaAtual}&countpage=${countPage}&order=${ordem}&filter=${filtro}`;\r\n                let { data } = await axios.get(URL_LISTAR_USUARIOS + params);\r\n                if(data.status==='success'){\r\n                    setUsuarios(data.data);\r\n                    setTotalItems(parseInt(data.count));\r\n                } else {\r\n                    setMessagem(data.response);\r\n                    setExibirModalErro(true);\r\n                }\r\n            } catch(err){\r\n                setUsuarios([]);\r\n                setMessagem(err.message);\r\n                setExibirModalErro(true);\r\n            }\r\n        }\r\n\r\n        if(carregarUsuarios){\r\n            obterUsuarios();\r\n            setCarregarUsuarios(false);\r\n        }\r\n    }, [carregarUsuarios, paginaAtual, countPage, ordenar, filtro]);\r\n\r\n    function handleExibirTabela(){\r\n        setExibirTabela(true);\r\n        setExibirEditar(false);\r\n        setExibirCadastrar(false);\r\n    }\r\n\r\n    function handleExibirCadastrar(){\r\n        setExibirCadastrar(true);\r\n        setExibirTabela(false);\r\n        setExibirEditar(false);\r\n    }\r\n\r\n    function handleExibirEditar(usuario){\r\n        setUsuario(usuario);\r\n        setCarregarUsuario(true);\r\n        setExibirEditar(true);\r\n        setExibirTabela(false);\r\n        setExibirCadastrar(false);\r\n    }\r\n\r\n    function handleMudarPagina(pagina) {\r\n        setPaginaAtual(pagina);\r\n        setCarregarUsuarios(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Cabecalho />\r\n            <Container \r\n                fluid>\r\n                <Row>\r\n                    <Col \r\n                        md={2}\r\n                        className=\"vh-100\" >\r\n                        <Menu />\r\n                    </Col>\r\n                    <Col md={10} >\r\n                        <TabelaUsuarios\r\n                            visivel={exibirTabela}\r\n                            handleExibirCadastrar={handleExibirCadastrar}\r\n                            handleExibirEditar={handleExibirEditar}\r\n                            usuarios={usuarios}\r\n                            setRecarregarUsuarios={setCarregarUsuarios}\r\n                            totalItems={totalItems} \r\n                            paginaAtual={paginaAtual} \r\n                            handleMudarPagina={handleMudarPagina}\r\n                            countPage={countPage}\r\n                            setCountPage={setCountPage}\r\n                            filtro={filtro}\r\n                            setFiltro={setFiltro}\r\n                            ordenar={ordenar}\r\n                            setOrdenar={setOrdenar}/>\r\n                        <CadastrarUsuario\r\n                            visivel={exibirCadastrar}\r\n                            handleExibirTabela={handleExibirTabela}\r\n                            setRecarregarUsuarios={setCarregarUsuarios}/>\r\n                        <EditarUsuario\r\n                            visivel={exibirEditar}\r\n                            handleExibirTabela={handleExibirTabela}\r\n                            setRecarregarUsuarios={setCarregarUsuarios}\r\n                            usuario={usuario}\r\n                            carregarUsuario={carregarUsuario} \r\n                            setCarregarUsuario={setCarregarUsuario}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Erro ao buscar Notícias: {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div> \r\n     );\r\n}\r\n\r\nexport default Usuarios;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\editar-usuario.js",["243","244"],[],"import {\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { \r\n    Card,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Modal,\r\n    Image\r\n} from 'react-bootstrap';\r\nimport Usuario from '../../../models/usuario.model';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from '../../../utils/constants';\r\n\r\nfunction EditarUsuario(props) {\r\n\r\n    const URL_CADASTRAR_USUARIO = constants.URL_BASE + constants.USUARIO;\r\n\r\n    const [codigo, setCodigo] = useState('');\r\n    const [nome, setNome] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [exibirModalSucesso, setExibirModalSucesso] = useState(false);\r\n    const [exibirModalErro, setExibirModalErro] = useState(false);\r\n    const [messagem, setMessagem] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        function obterUsuario(){\r\n            setCodigo(props.usuario.codigo);\r\n            setNome(props.usuario.nome);\r\n            setSenha(props.usuario.senha);\r\n        }\r\n\r\n        if(props.carregarUsuario){\r\n            obterUsuario();\r\n            props.setCarregarUsuario(false);\r\n        }\r\n    }, [props.carregarUsuario]);\r\n\r\n\r\n    async function salvarUsuario(event){\r\n        try {\r\n            event.preventDefault();\r\n            const novoUsuario = new Usuario(nome, senha);\r\n            const formData = new FormData();\r\n            formData.append('data', JSON.stringify(novoUsuario));\r\n            formData.append('method', 'put');\r\n            let { data } = await axios.post(URL_CADASTRAR_USUARIO + '/' + codigo, formData);\r\n            if(data.status==='success'){\r\n                setMessagem(data.response);\r\n                setExibirModalSucesso(true);\r\n            } else {\r\n                setMessagem(\"Erro na Edição de Registro: \" + data.response);\r\n                setExibirModalErro(true);\r\n            }\r\n        } catch (err) {\r\n            setMessagem(\"Erro na Edição de Registro: \" + err.message);\r\n            setExibirModalErro(true);\r\n        }\r\n    }\r\n\r\n    function visivel() {\r\n        return props.visivel ? 'mt-3' : 'hidden';\r\n    }\r\n\r\n    function handleNome(event){\r\n        setNome(event.target.value);\r\n    }\r\n\r\n    function handleSenha(event){\r\n        setSenha(event.target.value);\r\n    }\r\n\r\n    function handleFecharModalSucesso(){\r\n        setExibirModalSucesso(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarUsuarios(true);\r\n    }\r\n\r\n    function handleFecharModalErro(){\r\n        setExibirModalErro(false);\r\n        props.handleExibirTabela();\r\n        props.setRecarregarUsuarios(true);\r\n    }\r\n\r\n    return ( \r\n        <div\r\n            className={visivel()}>\r\n            <Card >\r\n                <Card.Header>\r\n                    <h2>\r\n                        Editar Usuario\r\n                    </h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Container >\r\n                        <Form \r\n                            onSubmit={salvarUsuario}>\r\n                            <Form.Group\r\n                                as={Row}>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Codigo:\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                        column\r\n                                        md={10}>\r\n                                    {codigo}\r\n                                </Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Nome:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={nome} \r\n                                        onChange={handleNome}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Row}\r\n                                className=\"mt-2\">\r\n                                <Form.Label\r\n                                        column\r\n                                        md={2}>\r\n                                    Senha:\r\n                                </Form.Label>\r\n                                <Col \r\n                                    md={10}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        value={senha} \r\n                                        onChange={handleSenha}\r\n                                        required />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group \r\n                                as={Row} \r\n                                className=\"mt-3\">\r\n                                <Col \r\n                                    className=\"text-end\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"danger\"\r\n                                        onClick={props.handleExibirTabela} >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col \r\n                                    className=\"text-start\"\r\n                                    md={6}>\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        type=\"submit\">\r\n                                        Salvar\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Container>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal \r\n                show={exibirModalSucesso} \r\n                onHide={handleFecharModalSucesso} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Sucesso\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"success\"\r\n                        onClick={handleFecharModalSucesso}>\r\n                        Continuar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal \r\n                show={exibirModalErro} \r\n                onHide={handleFecharModalErro}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Erro\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {messagem}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"warning\"\r\n                        onClick={handleFecharModalErro}>\r\n                        Fechar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nEditarUsuario.propTypes = {\r\n    visivel: PropTypes.bool.isRequired,\r\n    handleExibirTabela: PropTypes.func.isRequired,\r\n    setRecarregarUsuarios: PropTypes.func.isRequired,\r\n    usuario: PropTypes.object.isRequired,\r\n    carregarUsuario: PropTypes.bool.isRequired,\r\n    setCarregarUsuario: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default EditarUsuario;","C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\formulario\\cadastrar-usuario.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\tabela-usuarios.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\models\\usuario.model.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\itens-tabela-usuarios.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\ordenacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\paginacao.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\usuarios\\tabela\\remover-usuario.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\login\\login.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\utils\\constants.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-video-upload.js",[],[],"C:\\Users\\anderson\\Documents\\instituto-itaquere\\dashboard\\src\\components\\noticias\\formulario\\galeria-video-server.js",[],[],{"ruleId":"245","severity":1,"message":"246","line":74,"column":8,"nodeType":"247","endLine":74,"endColumn":67,"suggestions":"248"},{"ruleId":"245","severity":1,"message":"249","line":60,"column":8,"nodeType":"247","endLine":60,"endColumn":28,"suggestions":"250"},{"ruleId":"245","severity":1,"message":"251","line":90,"column":8,"nodeType":"247","endLine":90,"endColumn":31,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":101,"column":51,"nodeType":"255","messageId":"256","endLine":101,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":107,"column":51,"nodeType":"255","messageId":"256","endLine":107,"endColumn":53},{"ruleId":"245","severity":1,"message":"257","line":70,"column":8,"nodeType":"247","endLine":70,"endColumn":31,"suggestions":"258"},{"ruleId":"253","severity":1,"message":"254","line":80,"column":51,"nodeType":"255","messageId":"256","endLine":80,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":84,"column":49,"nodeType":"255","messageId":"256","endLine":84,"endColumn":51},{"ruleId":"253","severity":1,"message":"254","line":143,"column":29,"nodeType":"255","messageId":"256","endLine":143,"endColumn":31},{"ruleId":"253","severity":1,"message":"254","line":162,"column":40,"nodeType":"255","messageId":"256","endLine":162,"endColumn":42},{"ruleId":"245","severity":1,"message":"259","line":46,"column":8,"nodeType":"247","endLine":46,"endColumn":33,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":187,"column":37,"nodeType":"263","messageId":"264","endLine":187,"endColumn":77,"fix":"265"},{"ruleId":"266","severity":1,"message":"267","line":13,"column":5,"nodeType":"268","messageId":"269","endLine":13,"endColumn":10},{"ruleId":"245","severity":1,"message":"257","line":43,"column":8,"nodeType":"247","endLine":43,"endColumn":29,"suggestions":"270"},{"ruleId":"266","severity":1,"message":"271","line":8,"column":5,"nodeType":"268","messageId":"269","endLine":8,"endColumn":11},{"ruleId":"266","severity":1,"message":"272","line":9,"column":5,"nodeType":"268","messageId":"269","endLine":9,"endColumn":10},{"ruleId":"245","severity":1,"message":"273","line":74,"column":8,"nodeType":"247","endLine":74,"endColumn":67,"suggestions":"274"},{"ruleId":"266","severity":1,"message":"267","line":13,"column":5,"nodeType":"268","messageId":"269","endLine":13,"endColumn":10},{"ruleId":"245","severity":1,"message":"257","line":43,"column":8,"nodeType":"247","endLine":43,"endColumn":31,"suggestions":"275"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'URL_LISTAR_NOTICIAS'. Either include it or remove the dependency array.","ArrayExpression",["276"],"React Hook useEffect has missing dependencies: 'URL_LISTAR_DOCUMENTO' and 'URL_LISTAR_SECAO'. Either include them or remove the dependency array.",["277"],"React Hook useEffect has missing dependencies: 'LISTAR_GALERIA', 'LISTAR_VIDEO', 'URL_IMG', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["278"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["279"],"React Hook useEffect has missing dependencies: 'URL_DOC' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["280"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"281","text":"282"},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar",["283"],"'Button' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'URL_LISTAR_USUARIOS'. Either include it or remove the dependency array.",["284"],["285"],{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},[7162,7162]," rel=\"noreferrer\"",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [carregarNoticias, paginaAtual, countPage, ordenar, filtro, URL_LISTAR_NOTICIAS]",{"range":"302","text":"303"},"Update the dependencies array to be: [URL_LISTAR_DOCUMENTO, URL_LISTAR_SECAO, carregarBalancetes]",{"range":"304","text":"305"},"Update the dependencies array to be: [LISTAR_GALERIA, LISTAR_VIDEO, URL_IMG, props, props.carregarNoticia]",{"range":"306","text":"307"},"Update the dependencies array to be: [props, props.carregarNoticia]",{"range":"308","text":"309"},"Update the dependencies array to be: [URL_DOC, props, props.carregarDocumento]",{"range":"310","text":"311"},"Update the dependencies array to be: [props, props.carregarSecao]",{"range":"312","text":"313"},"Update the dependencies array to be: [carregarUsuarios, paginaAtual, countPage, ordenar, filtro, URL_LISTAR_USUARIOS]",{"range":"314","text":"315"},"Update the dependencies array to be: [props, props.carregarUsuario]",{"range":"316","text":"317"},[2722,2781],"[carregarNoticias, paginaAtual, countPage, ordenar, filtro, URL_LISTAR_NOTICIAS]",[2367,2387],"[URL_LISTAR_DOCUMENTO, URL_LISTAR_SECAO, carregarBalancetes]",[3321,3344],"[LISTAR_GALERIA, LISTAR_VIDEO, URL_IMG, props, props.carregarNoticia]",[2323,2346],"[props, props.carregarNoticia]",[1440,1465],"[URL_DOC, props, props.carregarDocumento]",[1150,1171],"[props, props.carregarSecao]",[2718,2777],"[carregarUsuarios, paginaAtual, countPage, ordenar, filtro, URL_LISTAR_USUARIOS]",[1142,1165],"[props, props.carregarUsuario]"]